import React, { useState } from 'react';\nimport ResponsiveForm from './ResponsiveForm';\nimport ResponsiveTable from './ResponsiveTable';\nimport { useResponsive } from '../hooks/useResponsive';\n\n// Exemplo de como usar os componentes responsivos\nconst ResponsiveExample = () => {\n  const { isMobile, isTablet, isDesktop, width } = useResponsive();\n  const [formData, setFormData] = useState({\n    nome: '',\n    email: '',\n    categoria: '',\n    descricao: ''\n  });\n\n  // Dados de exemplo para a tabela\n  const tableData = [\n    { id: 1, nome: 'João Silva', email: 'joao@email.com', categoria: 'Cliente', status: 'Ativo' },\n    { id: 2, nome: 'Maria Santos', email: 'maria@email.com', categoria: 'Fornecedor', status: 'Inativo' },\n    { id: 3, nome: 'Pedro Costa', email: 'pedro@email.com', categoria: 'Cliente', status: 'Ativo' }\n  ];\n\n  // Configuração das colunas da tabela\n  const tableColumns = [\n    { key: 'id', label: 'ID' },\n    { key: 'nome', label: 'Nome' },\n    { key: 'email', label: 'E-mail' },\n    { key: 'categoria', label: 'Categoria' },\n    { \n      key: 'status', \n      label: 'Status',\n      render: (item) => (\n        <span style={{\n          padding: '4px 8px',\n          borderRadius: '12px',\n          fontSize: '12px',\n          backgroundColor: item.status === 'Ativo' ? '#d4edda' : '#f8d7da',\n          color: item.status === 'Ativo' ? '#155724' : '#721c24'\n        }}>\n          {item.status}\n        </span>\n      )\n    }\n  ];\n\n  // Ações da tabela\n  const tableActions = (item) => [\n    {\n      label: '✏️ Editar',\n      onClick: () => alert(`Editando ${item.nome}`),\n      color: '#ff9800'\n    },\n    {\n      label: '🗑️ Excluir',\n      onClick: () => alert(`Excluindo ${item.nome}`),\n      color: '#f44336'\n    }\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Dados do formulário:', formData);\n    alert('Formulário enviado! Veja o console.');\n  };\n\n  const handleInputChange = (field) => (e) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: e.target.value\n    }));\n  };\n\n  return (\n    <div>\n      <h2>Exemplo de Componentes Responsivos</h2>\n      \n      {/* Informações sobre o dispositivo */}\n      <div className=\"card\" style={{ marginBottom: '20px' }}>\n        <h3>Informações do Dispositivo</h3>\n        <p><strong>Largura:</strong> {width}px</p>\n        <p><strong>Tipo:</strong> \n          {isMobile && ' 📱 Mobile'}\n          {isTablet && ' 📱 Tablet'}\n          {isDesktop && ' 💻 Desktop'}\n        </p>\n      </div>\n\n      {/* Exemplo de formulário responsivo */}\n      <ResponsiveForm \n        title=\"Formulário Responsivo\"\n        onSubmit={handleSubmit}\n        columns={2}\n      >\n        <ResponsiveForm.Group label=\"Nome\" required>\n          <ResponsiveForm.Input\n            type=\"text\"\n            placeholder=\"Digite seu nome\"\n            value={formData.nome}\n            onChange={handleInputChange('nome')}\n            required\n          />\n        </ResponsiveForm.Group>\n\n        <ResponsiveForm.Group label=\"E-mail\" required>\n          <ResponsiveForm.Input\n            type=\"email\"\n            placeholder=\"Digite seu e-mail\"\n            value={formData.email}\n            onChange={handleInputChange('email')}\n            required\n          />\n        </ResponsiveForm.Group>\n\n        <ResponsiveForm.Group label=\"Categoria\">\n          <ResponsiveForm.Select\n            value={formData.categoria}\n            onChange={handleInputChange('categoria')}\n            options={[\n              { value: 'cliente', label: 'Cliente' },\n              { value: 'fornecedor', label: 'Fornecedor' },\n              { value: 'parceiro', label: 'Parceiro' }\n            ]}\n            placeholder=\"Selecione uma categoria\"\n          />\n        </ResponsiveForm.Group>\n\n        <ResponsiveForm.Group label=\"Descrição\" fullWidth>\n          <ResponsiveForm.Textarea\n            placeholder=\"Digite uma descrição\"\n            value={formData.descricao}\n            onChange={handleInputChange('descricao')}\n            rows={4}\n          />\n        </ResponsiveForm.Group>\n\n        <ResponsiveForm.Actions>\n          <ResponsiveForm.Button type=\"submit\" variant=\"primary\">\n            💾 Salvar\n          </ResponsiveForm.Button>\n          <ResponsiveForm.Button \n            type=\"button\" \n            variant=\"secondary\"\n            onClick={() => setFormData({ nome: '', email: '', categoria: '', descricao: '' })}\n          >\n            🔄 Limpar\n          </ResponsiveForm.Button>\n        </ResponsiveForm.Actions>\n      </ResponsiveForm>\n\n      {/* Exemplo de tabela responsiva */}\n      <div style={{ marginTop: '30px' }}>\n        <h3>Tabela Responsiva</h3>\n        <p style={{ color: 'var(--cor-texto-label)', marginBottom: '20px' }}>\n          Esta tabela se transforma em cards no mobile automaticamente.\n        </p>\n        <ResponsiveTable\n          data={tableData}\n          columns={tableColumns}\n          actions={tableActions}\n          emptyMessage=\"Nenhum registro encontrado\"\n        />\n      </div>\n\n      {/* Dicas de uso */}\n      <div className=\"card\" style={{ marginTop: '30px', backgroundColor: '#f8f9fa' }}>\n        <h3>💡 Dicas de Uso</h3>\n        <ul style={{ paddingLeft: '20px' }}>\n          <li><strong>ResponsiveForm:</strong> Formulários que se adaptam automaticamente</li>\n          <li><strong>ResponsiveTable:</strong> Tabelas que viram cards no mobile</li>\n          <li><strong>useResponsive:</strong> Hook para detectar tamanho da tela</li>\n          <li><strong>CSS Classes:</strong> Use as classes do responsive.css para mais controle</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ResponsiveExample;